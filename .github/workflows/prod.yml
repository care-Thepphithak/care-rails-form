name: Care on Rails Production

on:
  push:
    branches: ["main"]

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: care-thepphithak/care-rails-form
  DEPLOY_PATH: ~/care-rails

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image_tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache Project Dependency
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.3.1'
          bundler-cache: true 
      - run: bundle exec rake

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix={{branch}}-,format=short

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install sshpass
        run: sudo apt-get update && sudo apt-get install -y sshpass

      - name: Login to GitHub Container Registry
        run: |
          sshpass -p "${{ secrets.SUDO_PASSWORD }}" ssh -o StrictHostKeyChecking=no care@${{ secrets.AWS_HOST_IP }} \
          'echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S echo "sudo password works" && echo "${{ secrets.GITHUB_TOKEN }}" | sudo -S docker login ghcr.io -u ${{ github.actor }} --password-stdin'

      - name: Copy Docker compose file to VM
        run: |
          sshpass -p "${{ secrets.SUDO_PASSWORD }}" scp -o StrictHostKeyChecking=no docker-compose.yml care@${{ secrets.AWS_HOST_IP }}:${{ env.DEPLOY_PATH }}

      - name: Set up and copy env file
        env:
          ENV: ${{ secrets.ENV_PROD }}
        run: echo $ENV > .env

      - name: Copy env file
        run: |
          sshpass -p "${{ secrets.SUDO_PASSWORD }}" scp -o StrictHostKeyChecking=no .env care@${{ secrets.AWS_HOST_IP }}:${{ env.DEPLOY_PATH }}

      - name: Build Docker compose
        run: |
          sshpass -p "${{ secrets.SUDO_PASSWORD }}" ssh -o StrictHostKeyChecking=no care@${{ secrets.AWS_HOST_IP }} \
          'cd ${{ env.DEPLOY_PATH }} && echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker compose -f docker-compose.yml pull'

      - name: Run Docker compose
        run: |
          sshpass -p "${{ secrets.SUDO_PASSWORD }}" ssh -o StrictHostKeyChecking=no care@${{ secrets.AWS_HOST_IP }} \
          'cd ${{ env.DEPLOY_PATH }} && echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker compose -f docker-compose.yml up -d'

      - name: Clear Docker image
        run: |
          sshpass -p "${{ secrets.SUDO_PASSWORD }}" ssh -o StrictHostKeyChecking=no care@${{ secrets.AWS_HOST_IP }} \
          'cd ${{ env.DEPLOY_PATH }} && echo "${{ secrets.SUDO_PASSWORD }}" | sudo -S docker image prune -f'
